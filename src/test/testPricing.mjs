/**
 * testPricing.mjs
 * Script de prueba para validar el sistema de precios din√°mico
 * Compara precios calculados vs precios legacy y genera reportes
 * 
 * Para ejecutar: node src/data/testPricing.mjs
 */

import { essentialPackage, addOnPackages } from '../data/biomarkers.js';
import { generatePricingReport, compareLegacyPricing, validatePackagePricing } from '../data/priceUtils.js';
import { getPriceStatistics } from '../data/priceData.js';

/**
 * Ejecuta todas las pruebas del sistema de precios
 */
const runPricingTests = () => {
  console.log('üß™ INICIANDO PRUEBAS DEL SISTEMA DE PRECIOS DIN√ÅMICO\n');
  
  // 1. Estad√≠sticas generales de precios
  console.log('üìä ESTAD√çSTICAS GENERALES DE PRECIOS');
  console.log('=====================================');
  const stats = getPriceStatistics();
  console.log(`Total biomarcadores: ${stats.totalBiomarkers}`);
  console.log(`Precio Prevenii promedio: ${stats.preveniiStats.avg.toFixed(2)}‚Ç¨`);
  console.log(`Rango Prevenii: ${stats.preveniiStats.min}‚Ç¨ - ${stats.preveniiStats.max}‚Ç¨`);
  console.log(`Precio Market promedio: ${stats.marketStats.avg.toFixed(2)}‚Ç¨`);
  console.log(`Rango Market: ${stats.marketStats.min}‚Ç¨ - ${stats.marketStats.max}‚Ç¨\n`);
  
  // 2. Validar Essential Package
  console.log('üîç VALIDACI√ìN PAQUETE ESSENTIAL');
  console.log('===============================');
  const essentialValidation = validatePackagePricing(essentialPackage.biomarkers);
  console.log(`Biomarcadores v√°lidos: ${essentialValidation.validCount}/${essentialValidation.totalCount}`);
  
  if (essentialValidation.isValid) {
    console.log('‚úÖ Todos los biomarcadores tienen precios v√°lidos');
    const essentialPricing = essentialPackage.getPricing('both');
    console.log(`Precio calculado: ${essentialPricing.price}‚Ç¨`);
    console.log(`Tests incluidos: ${essentialPricing.testCount}`);
    console.log(`Precio por test: ${essentialPricing.pricePerTest.toFixed(2)}‚Ç¨`);
  } else {
    console.log('‚ùå Problemas encontrados:');
    essentialValidation.issues.forEach(issue => {
      console.log(`  - ${issue.name}: ${issue.issue}`);
    });
  }
  console.log('');
  
  // 3. Validar Add-ons
  console.log('üîç VALIDACI√ìN ADD-ONS');
  console.log('=====================');
  
  Object.keys(addOnPackages).forEach(key => {
    const addOn = addOnPackages[key];
    console.log(`\nüì¶ ${addOn.name}`);
    console.log('-'.repeat(addOn.name.length + 4));
    
    const validation = validatePackagePricing(addOn.biomarkers);
    console.log(`Biomarcadores v√°lidos: ${validation.validCount}/${validation.totalCount}`);
    
    if (validation.isValid) {
      console.log('‚úÖ Precios v√°lidos');
      
      // Probar precios din√°micos si existe la funci√≥n
      if (addOn.getPricing) {
        try {
          const pricing = addOn.getPricing();
          if (pricing.male && pricing.female) {
            console.log(`Precio hombre: ${Math.round(pricing.male.price)}‚Ç¨ (${pricing.male.testCount} tests)`);
            console.log(`Precio mujer: ${Math.round(pricing.female.price)}‚Ç¨ (${pricing.female.testCount} tests)`);
          } else {
            console.log(`Precio: ${Math.round(pricing.price)}‚Ç¨ (${pricing.testCount} tests)`);
          }
        } catch (error) {
          console.log(`‚ùå Error calculando precios: ${error.message}`);
        }
      } else {
        console.log('‚ö†Ô∏è  Sin funci√≥n getPricing - usando precios legacy');
        if (addOn.price) {
          if (typeof addOn.price === 'object') {
            console.log(`Precio legacy hombre: ${addOn.price.male}‚Ç¨`);
            console.log(`Precio legacy mujer: ${addOn.price.female}‚Ç¨`);
          } else {
            console.log(`Precio legacy: ${addOn.price}‚Ç¨`);
          }
        }
      }
    } else {
      console.log('‚ùå Problemas encontrados:');
      validation.issues.forEach(issue => {
        console.log(`  - ${issue.name}: ${issue.issue}`);
      });
    }
  });
  
  console.log('\n‚úÖ MIGRACI√ìN COMPLETADA');
  console.log('=======================');
  console.log('Todos los add-ons han sido migrados al sistema de precios din√°mico.');
  console.log('Los precios se calculan autom√°ticamente bas√°ndose en los biomarcadores incluidos.');
  console.log('Para actualizar precios, simplemente modifica el CSV en priceData.js');
};

// Ejecutar pruebas
runPricingTests(); 